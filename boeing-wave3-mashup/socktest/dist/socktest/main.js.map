{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"data from backend \\n\\n<button (click)=\\\"submit()\\\">send maadi to backend</button>\\n\\n{{greetings[0]}} \"","import { Component } from '@angular/core';\nimport * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  description = 'Angular-WebSocket Demo';\n  disabled = true;\n  greetings: string[] = [];\n   value='here';\n // disabled = true;\n  \n  private stompClient = null;\n  // auto = new autocomplete;\n\n  setConnected(connected: boolean) {\n    this.disabled = !connected;\n\n    if (connected) {\n      this.greetings = [];\n    }\n  }\n  ngOnInit(){\n    this.connect();\n  }\n  connect() {\n    const socket = new SockJS('http://localhost:8029/gkz-stomp-endpoint');\n    //,null,{transports: ['websocket']}\n    this.stompClient = Stomp.over(socket);\n        //Stomp.overWS('ws://localhost:61614/stomp');\n    const _this = this;\n    this.stompClient.connect({}, function (frame) {\n      _this.setConnected(true);\n      console.log('Connected: ' + frame);\n\n      _this.stompClient.subscribe('/topic/hi', function (helo) {\n        _this.showGreeting(JSON.parse(helo.body).codeTemplate);\n      });\n    });\n  }\n  disconnect() {\n    if (this.stompClient != null) {\n      this.stompClient.disconnect();\n    }\n\n    this.setConnected(false);\n    console.log('Disconnected!');\n  }\n  submit() {\n    console.log(\"sending data to backend\");\n      this.greetings = [];\n     this.stompClient.send(\n       '/gkz/hello',\n       {},   \n       JSON.stringify({'codeTemplate': \"ramukaka\"})\n     );\n     console.log(\"sending data to submission service\");\n   }\n\n   showGreeting(message) {\n    this.greetings.push(message);\n    console.log(\"data from backend\");\n      console.log(this.greetings[0])\n                          }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}